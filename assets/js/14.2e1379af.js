(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{314:function(t,s,a){"use strict";a.r(s);var e=a(5),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、从容器中构建镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、从容器中构建镜像"}},[t._v("#")]),t._v(" 一、从容器中构建镜像")]),t._v(" "),s("h3",{attrs:{id:"_1-1-打包git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-打包git"}},[t._v("#")]),t._v(" 1.1 打包git")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从ubuntu中运行一个名为image-dev的容器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -i 交互式操作 -t 终端 -d 后台运行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-itd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" image-dev ubuntu:latest /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入容器终端")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" image-dev /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新软件包并安装git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" version\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git version 2.25.1")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-2-审查改动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-审查改动"}},[t._v("#")]),t._v(" 1.2 审查改动")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" image-dev\n")])])]),s("p",[t._v("A add"),s("br"),t._v("\nC 修改"),s("br"),t._v("\nD delete")]),t._v(" "),s("h3",{attrs:{id:"_1-3-commit-创建新镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-commit-创建新镜像"}},[t._v("#")]),t._v(" 1.3 Commit——创建新镜像")]),t._v(" "),s("p",[t._v("从修改后的容器创建一个名为ubuntu-git的镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# -a "author" -m "message"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@tim"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Added git"')]),t._v(" image-dev ubuntu-git\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sha256:e32f545e7714f9dbc6eae4f21e3d542fcf3a7bae6067b135bf319f97eceb2a7c")]),t._v("\n")])])]),s("p",[t._v("ubuntu-git将出现在本地镜像列表")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# REPOSITORY                   TAG                     IMAGE ID       CREATED              SIZE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   latest                  e32f545e7714   About a minute ago   207MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu                       latest                  d13c942271d6   4 days ago           72.8MB")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-4-镜像体积和层数限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-镜像体积和层数限制"}},[t._v("#")]),t._v(" 1.4 镜像体积和层数限制")]),t._v(" "),s("ol",[s("li",[t._v("分配新标签生成新的版本")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag ubuntu-git:latest ubuntu-git:2.55.1\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("在新镜像中卸载git")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从源镜像中启动")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" image-dev2 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-itd")]),t._v(" ubuntu-git:latest /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入容器终端")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" image-dev2 /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" remove "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" version\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bash: /usr/bin/git: No such file or directory")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("提交镜像")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" commit image-dev2 ubuntu-git:removed\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag ubuntu-git:removed ubuntu-git:latest\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("查看本地镜像")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# REPOSITORY                   TAG                     IMAGE ID       CREATED          SIZE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   latest                  39361ad385b0   58 seconds ago   208MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   removed                 39361ad385b0   58 seconds ago   208MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   2.55.1                  e32f545e7714   23 minutes ago   207MB")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("查看镜像历史")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" ubuntu-git:removed\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#IMAGE          CREATED          CREATED BY                                      SIZE      COMMENT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#39361ad385b0   27 minutes ago   /bin/bash                                       1.06MB    ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#e32f545e7714   50 minutes ago   /bin/bash                                       134MB     Added git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#d13c942271d6   4 days ago       /bin/sh -c #(nop)  CMD ["bash"]                 0B        ')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#<missing>      4 days ago       /bin/sh -c #(nop) ADD file:122ad323412c2e70b…   72.8MB")]),t._v("\n")])])]),s("p",[t._v("**问题所在：**卸载了git的的镜像会比源镜像要大的多（208MB > 207MB），这是由于使用"),s("code",[t._v("docker commit")]),t._v("命令会向源镜像提交一个新的文件层，导致镜像体积变大。")]),t._v(" "),s("p",[t._v("且联合文件系统(UFS)是有层数限制的，一般为42层。")]),t._v(" "),s("p",[t._v("所以在将产品上线到"),s("strong",[t._v("部署环境")]),t._v("时，总是从容器构建新镜像来发布是不实际的做法。")]),t._v(" "),s("h2",{attrs:{id:"二、导入和导出扁平镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、导入和导出扁平镜像"}},[t._v("#")]),t._v(" 二、导入和导出扁平镜像")]),t._v(" "),s("h3",{attrs:{id:"_2-1-导出镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-导出镜像"}},[t._v("#")]),t._v(" 2.1 导出镜像")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" image-dev2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ubuntu-git_removed.tar\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-lh")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -rw-rw-r--  1 tim tim 171M 1月  11 16:32 ubuntu-git_removed.tar")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v(" ubuntu-git_removed.tar\n")])])]),s("p",[t._v("镜像大小被扁平。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-导入镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-导入镜像"}},[t._v("#")]),t._v(" 2.2 导入镜像")]),t._v(" "),s("ol",[s("li",[t._v("导入")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),t._v(" - new_ubuntu-git:removed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ubuntu-git_removed.tar\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# REPOSITORY                   TAG                     IMAGE ID       CREATED          SIZE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# new_ubuntu-git               removed                 81f8545c2dbe   7 seconds ago    174MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   latest                  39361ad385b0   33 minutes ago   208MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   removed                 39361ad385b0   33 minutes ago   208MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   2.55.1                  e32f545e7714   56 minutes ago   207MB")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("查看镜像历史")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" new_ubuntu-git:removed \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IMAGE          CREATED              CREATED BY   SIZE      COMMENT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 81f8545c2dbe   About a minute ago                174MB     Imported from -")]),t._v("\n")])])]),s("p",[s("strong",[t._v("问题所在：")]),t._v(" 会丢失所有改动信息，无法在"),s("strong",[t._v("生产环境")]),t._v("中使用。而生产环境中的镜像"),s("code",[t._v("(ubuntu-git:latest)")]),t._v("随着改动的增加会越来越大，以G为单位的镜像并不少见，非常难以迁移和扩展。")]),t._v(" "),s("h2",{attrs:{id:"三、dockerfile构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、dockerfile构建"}},[t._v("#")]),t._v(" 三、Dockerfile构建")]),t._v(" "),s("p",[t._v("Dockerfile是一个文件，它由构建镜像的指令组成。")]),t._v(" "),s("p",[t._v("指令由Docker镜像构建者自上而下排列，能够被用来修改镜像的任何信息。")]),t._v(" "),s("p",[t._v("使用Dockerfile构建镜像使得很多任务变得非常简单。")]),t._v(" "),s("h3",{attrs:{id:"_3-1-使用dockerfile打包git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-使用dockerfile打包git"}},[t._v("#")]),t._v(" 3.1 使用Dockerfile打包Git")]),t._v(" "),s("ol",[s("li",[t._v("创建Dockerfile")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" Dockerfile\n")])])]),s("p",[t._v("输入以下内容")]),t._v(" "),s("div",{staticClass:"language-Dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# An example Dockerfile for installing Git on Ubuntu")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ubuntu:latest")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MAINTAINER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@tim"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get update")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get install -y git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git"')]),t._v("]")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("从Dockerfile中创建镜像")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .表示执行的上下文环境")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" ubuntu-git:auto "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("查看镜像")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" images\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# REPOSITORY                   TAG                     IMAGE ID       CREATED         SIZE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   auto                    7132d02527dc   6 seconds ago   207MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# new_ubuntu-git               removed                 81f8545c2dbe   2 hours ago     174MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   latest                  39361ad385b0   2 hours ago     208MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   removed                 39361ad385b0   2 hours ago     208MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ubuntu-git                   2.55.1                  e32f545e7714   3 hours ago     207MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" ubuntu-git:auto\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# IMAGE          CREATED              CREATED BY                                      SIZE      COMMENT")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 7132d02527dc   About a minute ago   /bin/sh -c #(nop)  ENTRYPOINT ["git"]           0B        ')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 684f0c017f49   About a minute ago   /bin/sh -c apt-get install -y git               102MB     ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0629ea9477b2   2 minutes ago        /bin/sh -c apt-get update                       32.7MB    ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 96f904e8c083   About an hour ago    /bin/sh -c #(nop)  MAINTAINER "@tim"            0B        ')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# d13c942271d6   4 days ago           /bin/sh -c #(nop)  CMD ["bash"]                 0B        ')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# <missing>      4 days ago           /bin/sh -c #(nop) ADD file:122ad323412c2e70b…   72.8MB    ")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("运行镜像")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("docker run -itd --name auto-image ubuntu-git:auto version\ndocker logs auto-image\n# git version 2.55.1\n")])])]),s("p",[t._v("如上，使用一个极小的Dockerfile即可自动化构建一个大小为百MB级别的Docker镜像")]),t._v(" "),s("h3",{attrs:{id:"_3-2-dockerfile指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-dockerfile指令"}},[t._v("#")]),t._v(" 3.2 Dockerfile指令")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-from-指定基础镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-from-指定基础镜像"}},[t._v("#")]),t._v(" 3.2.1 FROM：指定基础镜像")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ubuntu:latest")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-2-maintainer-指定作者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-maintainer-指定作者"}},[t._v("#")]),t._v(" 3.2.2 MAINTAINER：指定作者")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MAINTAINER")]),t._v(" <name> <email>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MAINTAINER")]),t._v(" <tim> <tim@example.com>")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-3-run-执行命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-run-执行命令"}},[t._v("#")]),t._v(" 3.2.3 RUN：执行命令")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# shell格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" <command>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" apt-get install git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exec格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apt-get"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"install"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git"')]),t._v("]")]),t._v("\n")])])]),s("p",[t._v("多行命令不要写多个RUN，原因是Dockerfile中每一个指令都会建立一层")]),t._v(" "),s("p",[t._v("多少个RUN就构建了多少层镜像，会造成镜像的臃肿、多层，不仅仅增加了构件部署的时间，还容易出错，RUN书写时的换行符是 \\")]),t._v(" "),s("h4",{attrs:{id:"_3-2-4-copy-复制文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-copy-复制文件"}},[t._v("#")]),t._v(" 3.2.4 COPY：复制文件")]),t._v(" "),s("p",[t._v("将宿主机器上的的文件复制到镜像内，如果目的位置不存在，Docker会自动创建。")]),t._v(" "),s("p",[t._v("但宿主机器用要复制的目录必须是和Dockerfile文件统计目录下")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" [--chown=<user>:<group>] <源路径>... <目标路径>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" [--chown=<user>:<group>] ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<源路径1>"')]),t._v(",... "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<目标路径>"')]),t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" package.json /usr/src/app/")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-5-cmd-容器启动命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-cmd-容器启动命令"}},[t._v("#")]),t._v(" 3.2.5 CMD：容器启动命令")]),t._v(" "),s("p",[t._v("CMD命令用于容器启动时需要执行的命令，CMD在Dockerfile中只能出现一次，如果出现多个，那么只有最后一个会有效。")]),t._v(" "),s("p",[t._v("其作用是在启动容器的时候提供一个默认的命令项。如果用户执行"),s("code",[t._v("docker run")]),t._v("的时候提供了命令项，就会覆盖掉这个命令，没提供就会使用构建时的命令。")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# shell 格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" <命令>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exec 格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"可执行文件"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数1"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数2"')]),t._v("...]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如容器启动时进入bash：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),t._v("]")]),t._v("\n")])])]),s("ul",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("CMD 在 docker run 时运行。\n")])])])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("RUN 在 docker build 时运行。\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"_3-2-6-expose-暴露端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-expose-暴露端口"}},[t._v("#")]),t._v(" 3.2.6 EXPOSE：暴露端口")]),t._v(" "),s("p",[t._v("设置容器对外映射的容器端口号，如tomcat容器内使用的端口8081，则用EXPOSE命令可以告诉外界该容器的8081端口对外")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" <端口1> [<端口2>...]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8081")]),t._v("\n")])])]),s("p",[t._v("EXPOSE 8081 等价于 "),s("code",[t._v("docker run -p 8081")])]),t._v(" "),s("p",[t._v("当需要把8081端口映射到宿主机中的某个端口（如8888）以便外界访问时，则可以用"),s("code",[t._v("docker run -p 8888:8081")])]),t._v(" "),s("h4",{attrs:{id:"_3-2-7-workdir-配置工作目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-7-workdir-配置工作目录"}},[t._v("#")]),t._v(" 3.2.7 WORKDIR：配置工作目录")]),t._v(" "),s("p",[t._v("WORKDIR命令是为RUN、CMD、ENTRYPOINT指令配置工作目录。其效果类似于Linux命名中的cd命令，用于目录的切换，但是和cd不一样的是：如果切换到的目录不存在，WORKDIR会为此创建目录。")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##进入/usr/local/nginx目录下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /usr/local/nginx")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##进入/usr/local/nginx中的html目录下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" html")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 在html目录下创建了一个hello.txt文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" > hello.txt")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-8-entrypoint-容器启动执行命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-8-entrypoint-容器启动执行命名"}},[t._v("#")]),t._v(" 3.2.8 ENTRYPOINT：容器启动执行命名")]),t._v(" "),s("p",[t._v("作用与用法和CMD一致")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# shell 格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" <命令>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exec 格式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"可执行文件"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数1"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数2"')]),t._v("...]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如容器启动时进入bash：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),t._v("]")]),t._v("\n")])])]),s("p",[t._v("CMD的命令会被"),s("code",[t._v("docker run")]),t._v("的命令覆盖而ENTRYPOINT不会")]),t._v(" "),s("p",[t._v("CMD和ENTRYPOINT都存在时，CMD的指令变成了ENTRYPOINT的参数，并且此CMD提供的参数会被 "),s("code",[t._v("docker run")]),t._v(" 后面的命令覆盖")]),t._v(" "),s("h4",{attrs:{id:"_3-2-9-volume-定义匿名数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-9-volume-定义匿名数据卷"}},[t._v("#")]),t._v(" 3.2.9 VOLUME：定义匿名数据卷")]),t._v(" "),s("p",[t._v("创建一个可以从本地主机或其他容器挂载的挂载点。")]),t._v(" "),s("p",[t._v("例如我们知道tomcat的webapps目录是放web应用程序代码的地方，此时我们要把webapps目录挂载为匿名卷，这样任何写入webapps中的数据都不会被记录到容器的存储层，让容器存储层无状态化。")]),t._v(" "),s("ul",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("  避免重要的数据，因容器重启而丢失，这是非常致命的。\n")])])])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("  避免容器不断变大。\n")])])])])]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VOLUME")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<路径1>"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<路径2>"')]),t._v("...]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VOLUME")]),t._v(" <路径>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建tomcat的webapps目录的一个挂载点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VOLUME")]),t._v(" /usr/local/tomcat/webapps")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行容器时，通过docker run -v来把匿名挂载点都挂载在宿主机器上的某个目录")]),t._v("\ndocker run -d -v /home/tomcat_webapps:/usr/local/tomcat/webapps\n")])])]),s("h4",{attrs:{id:"_3-2-10-user-指定执行用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-10-user-指定执行用户"}},[t._v("#")]),t._v(" 3.2.10 USER：指定执行用户")]),t._v(" "),s("p",[t._v("用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" <用户名>[:<用户组>]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USER")]),t._v(" daemon")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-11-add-添加文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-11-add-添加文件"}},[t._v("#")]),t._v(" 3.2.11 ADD：添加文件")]),t._v(" "),s("p",[t._v("ADD 指令和 COPY 的使用格类似（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：")]),t._v(" "),s("p",[t._v("ADD 的优点：在执行 <源文件> 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 <目标路径>。")]),t._v(" "),s("p",[t._v("ADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。")]),t._v(" "),s("h4",{attrs:{id:"_3-2-12-onbuild-延迟构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-12-onbuild-延迟构建"}},[t._v("#")]),t._v(" 3.2.12 ONBUILD：延迟构建")]),t._v(" "),s("p",[t._v("ONBUILD用于配置当前所创建的镜像作为其它新创建镜像的基础镜像时，所执行的操作指令。")]),t._v(" "),s("p",[t._v("即当这个镜像创建后，若其它镜像以这个镜像为基础，会先执行这个镜像的ONBUILD命令")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ONBUILD <其它指令>\n")])])]),s("h4",{attrs:{id:"_3-2-13-env-永久环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-13-env-永久环境变量"}},[t._v("#")]),t._v(" 3.2.13 ENV：永久环境变量")]),t._v(" "),s("p",[t._v("设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" <key> <value>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" <key1>=<value1> <key2>=<value2>...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_HOME /opt/jdk")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" PATH "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PATH")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$JAVA_HOME")]),t._v("/bin")]),t._v("\n")])])]),s("ol",[s("li",[t._v("ENV具有传递性，也就是当前镜像被用作其它镜像的基础镜像时，新镜像会拥有当前这个基础镜像所有的环境变量")]),t._v(" "),s("li",[t._v("ENV定义的环境变量，可以在dockerfile被后面的所有指令（CMD除外）中使用，但不能被"),s("code",[t._v("docker run")]),t._v(" 的命令参数引用")])]),t._v(" "),s("h4",{attrs:{id:"_3-2-14-arg-临时环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-14-arg-临时环境变量"}},[t._v("#")]),t._v(" 3.2.14 ARG：临时环境变量")]),t._v(" "),s("p",[t._v("构建参数，与 ENV 作用一致。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效。即只在 "),s("code",[t._v("docker build")]),t._v("的过程中有效，构建好的镜像内不存在此环境变量。")]),t._v(" "),s("p",[t._v("构建命令 "),s("code",[t._v("docker build")]),t._v(" 中可以用 "),s("code",[t._v("--build-arg <参数名>=<值>")]),t._v(" 来覆盖。")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ARG")]),t._v(" <参数名>[=<默认值>]")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-2-15-label-添加元数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-15-label-添加元数据"}},[t._v("#")]),t._v(" 3.2.15 LABEL：添加元数据")]),t._v(" "),s("p",[t._v("LABEL 指令用来给镜像添加一些元数据（metadata），以键值对的形式，语法格式如下：")]),t._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LABEL")]),t._v(" <key>=<value> <key>=<value> <key>=<value> ...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LABEL")]),t._v(" org.opencontainers.image.authors="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')])]),t._v("\n")])])]),s("h3",{attrs:{id:"四、docker常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、docker常用命令"}},[t._v("#")]),t._v(" 四、Docker常用命令")]),t._v(" "),s("h4",{attrs:{id:"_4-1-复制文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-复制文件"}},[t._v("#")]),t._v(" 4.1 复制文件")]),t._v(" "),s("p",[t._v("从主机复制到容器")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" host_path containerID:container_path\n")])])]),s("p",[t._v("从容器复制到主机")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" containerID:container_path host_path\n")])])]),s("h4",{attrs:{id:"_4-2-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-tag"}},[t._v("#")]),t._v(" 4.2 Tag")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTIONS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" IMAGE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("REGISTRYHOST/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("USERNAME/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将镜像ubuntu:15.10标记为 runoob/ubuntu:v3 镜像")]),t._v("\nroot@runoob:~"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker tag ubuntu:15.10 runoob/ubuntu:v3")]),t._v("\n")])])]),s("h3",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.runoob.com/docker/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 教程 | 菜鸟教程"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("《Docker实战》")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000018210280#",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何用Dockerfile构建镜像"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);